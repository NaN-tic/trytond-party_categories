# The COPYRIGHT file at the top level of this repository contains the full
# copyright notices and license terms.
import unittest
from decimal import Decimal
import trytond.tests.test_tryton
from trytond.tests.test_tryton import ModuleTestCase, with_transaction
from trytond.transaction import Transaction
from trytond.pool import Pool


class TestPartyCategoriesCase(ModuleTestCase):
    'Test Party Categories module'
    module = 'party_categories'

    @with_transaction()
    def test_categories(self):
        'Test the validate categories'
        pool = Pool()
        Category = pool.get('party.category')
        Party = pool.get('party.party')

        category = Category()
        category.name = "Category"
        category.save()
        cat1 = Category()
        cat1.name = "Cat1"
        cat1.kind = 'view'
        cat1.required = True
        cat1.unique = True
        cat1.save()
        cat1a = Category()
        cat1a.name = "Cat1a"
        cat1a.parent = cat1
        cat1a.save()

        party = Party()
        party.name = 'Template'
        template.categories = [category]
        self.assertRaises(Exception, Party.create, [party._save_values()])
        party.categories = [category, cat1, cat1a]
        party.save()
        self.assertEqual(len(party.categories), 3)



def suite():
    suite = trytond.tests.test_tryton.suite()
    suite.addTests(unittest.TestLoader().loadTestsFromTestCase(
        TestPartyCategoriesCase))
    return suite
